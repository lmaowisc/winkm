---
title: "Calculating win-loss statistics using summary data"
subtitle: "Reconstruction based on published Kaplan-Meier curves of overall and event-free survival"
date: today
execute:
  warning: false
bibliography: references.bib
---



**WinKM** provides a simple way to calculate win-loss statistics using
summary data. This is useful when you have access to only published
Kaplan-Meier (KM) curves of *overall survival* (OS) and nonfatal
*event-free survival time* (EFS), but not the individual patient data,
as is often the case in **systematic reviews** and **meta-analyses**.

## Basic idea

The basic idea is to consider the win and loss proportions by a certain
time as a functional of the joint distribution of OS and EFS. Since we
only have the marginal distributions through the KM curves, we will need
to infer their associations via additional summary data like *total
event counts and rates*.

All in all, we need the following for each arm:

-   **KM estimates** for OS and EFS (obtained by scanning and digitizing
    the curves using free online tools like
    [WebPlotDigitizer](https://apps.automeris.io/wpd/);
-   **At-risk table** at selected time points (usually provided below
    the KM curves);
-   **Total event counts** (reported in the CONSORT diagram or results
    section):
    -   Deaths (OS);
    -   EFS endpoints (first of death/nonfatal event);
    -   Nonfatal event.

## An Example: a step-by-step guide

### Installation

Download and compile the R functions from the `winkm_functions.R` script
available at the [GitHub repository](https://github.com/lmaowisc/winkm).

```{r}
source("winkm_functions.R")
library(tidyverse) # for data manipulation and visualization
library(ggsci) # for color palettes
```

### Original study

```{r}
#| echo: false
#| warning: false
#| include: false

# Define source and destination paths
source_dir <- "data/Camrelizumab Luo 2021 - JAMA/"

# Copy the file
file.copy(paste0(source_dir, "camrelizumab_os.csv"), paste0("docs/", "camrelizumab_os.csv"), overwrite = TRUE)
file.copy(paste0(source_dir, "camrelizumab_pfs.csv"), paste0("docs/", "camrelizumab_pfs.csv"), overwrite = TRUE)
# ?file.copy
```


Consider the ESCORT-1st trial [@luo2021, open-access] that compares the efficacy of **camrelizumab**
($N=298$) versus **placebo** ($N=298$) (both in combination with
chemotherapy) in patients with advanced esophageal squamous cell
carcinoma on the *co-primary endpoints* of

-   **Overall survival** (OS);
-   **Progression free survival** (PFS).

### Scan the KM curves

The KM curves for OS and PFS are accessible in [Figure 2](https://cdn.jamanetwork.com/ama/content_public/journal/jama/938771/joi210086f2_1631212840.67618.png?Expires=1742906986&Signature=WCvbxcuOTh8hPw~iEh2XWTNts3Pz7nUT7PohXwdZZYqGDMfjAiYi5E~UCPFkZNQVJH7X01c4SzFLqV-q6EBpTdfxKDBJ49kk-oXN9JcsQZ1gvGgPRwhm0j-a6SVDPNCsifiOPEY3dyc0Qcj0d2pXChb51nNA1luMmDM9ngPAdBPy5cLVm9~Ao0TC9mzWD2cRrTbpD82YCwVQ8ukSieJWMsv9zoNjKjw0hnXgSNuAu6J6dWMH61P9LRPDTvpI6fgBYoD4h6Xo7aERiRMgh8ExIGZQgwBmNCJBcupPRu-10NTHH4BnLgM-eitKI0EG96a0pRDVy8mDe5FzqwtmfuQPvw__&Key-Pair-Id=APKAIE5G5CRDK6RD3PGA) of the original publication. I scanned the graphs using [WebPlotDigitizer](https://apps.automeris.io/wpd/) and stored the digitized
data in:

-   [camrelizumab_os.csv](https://lmaowisc.github.io/winkm/camrelizumab_os.csv) for OS;
-   [camrelizumab_pfs.csv](https://lmaowisc.github.io/winkm/camrelizumab_pfs.csv) for PFS.

Read and clean OS data:
```{r}
# Reading (OS) from CSV, skipping first 2 lines, specifying col_names manually
# Data look like this:
# placebo_chemo		camr_chemo	
# X	Y	X	Y
# 0.178704185	1	0.111817005	0.995059289
# 0.580821703	0.994071146	0.536244961	0.990118577
os_data <- readr::read_csv(
  "data/Camrelizumab Luo 2021 - JAMA/camrelizumab_os.csv",  # Replace with your path
  skip = 2,
  col_names = c("time_placebo", "surv_placebo",
                "time_camr",    "surv_camr")
  # col_names must be in the format: "time_group", "surv_group"
)

# Pivot to long, labeling groups
os_long <- prepare_km_data(
  km_data       = os_data,
  time_cols     = c("time_placebo", "time_camr"),
  surv_cols     = c("surv_placebo", "surv_camr"),
  ref = "placebo", # "group0" in "time_group0", "surv_group0"
  group_labels  = c("Placebo", "Camrelizumab") # First ref (ctr) and then trt
)
```

Read and clean PFS data:

```{r}
# Reading (PFS) from CSV, skipping first 2 lines, specifying col_names manually
# Data look like this:
# placebo_chemo		camr_chemo	
# X	Y	X	Y
# 0.203515376	1.001333549	0.203515376	0.996069918
# 0.582249871	0.997326755	0.682098056	0.989870686
pfs_data <- readr::read_csv(
  "data/Camrelizumab Luo 2021 - JAMA/camrelizumab_pfs.csv", # Replace with your path
  skip = 2,
  col_names = c("time_placebo", "surv_placebo",
                "time_camr",    "surv_camr")
)

# Pivot to long, labeling groups
pfs_long <- prepare_km_data(
  km_data       = pfs_data,
  time_cols     = c("time_placebo", "time_camr"),
  surv_cols     = c("surv_placebo", "surv_camr"),
  ref = "placebo",
  group_labels  = c("Placebo", "Camrelizumab")
)
```

Merge the OS and PFS data:
```{r}
# Merge endpoints
df_km <- merge_endpoints(os_long, pfs_long)
# # A tibble: 398 Ã— 4
#    group    time    os   pfs
#    <fct>   <dbl> <dbl> <dbl>
#  1 Placebo 0     1     1    
#  2 Placebo 0.112 1     1.00

```

Plot the digitized data and compare with the original KM curves of
@luo2021 
([Figure 2](https://cdn.jamanetwork.com/ama/content_public/journal/jama/938771/joi210086f2_1631212840.67618.png?Expires=1742906986&Signature=WCvbxcuOTh8hPw~iEh2XWTNts3Pz7nUT7PohXwdZZYqGDMfjAiYi5E~UCPFkZNQVJH7X01c4SzFLqV-q6EBpTdfxKDBJ49kk-oXN9JcsQZ1gvGgPRwhm0j-a6SVDPNCsifiOPEY3dyc0Qcj0d2pXChb51nNA1luMmDM9ngPAdBPy5cLVm9~Ao0TC9mzWD2cRrTbpD82YCwVQ8ukSieJWMsv9zoNjKjw0hnXgSNuAu6J6dWMH61P9LRPDTvpI6fgBYoD4h6Xo7aERiRMgh8ExIGZQgwBmNCJBcupPRu-10NTHH4BnLgM-eitKI0EG96a0pRDVy8mDe5FzqwtmfuQPvw__&Key-Pair-Id=APKAIE5G5CRDK6RD3PGA)):
```{r}
#| code-fold: true
#| code-summary: Plot KM curves
#| eval: true
#| fig-width: 6
#| fig-height: 4

# Plot the KM curves and compare with the published ones
df_km |> 
  ggplot(aes(x = time, y = os, color = group)) +
  geom_step(aes(linetype = "OS"), linewidth = 0.8) +
  geom_step(aes(y = pfs, linetype = "PFS"), linewidth = 0.8) +
  theme_minimal() +
  theme(legend.position = "bottom") +
  scale_x_continuous(limits = c(0, 18), breaks = seq(0, 18, by = 2), expand = expansion(c(0,0))) +
  scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, by = 0.2), expand = expansion(c(0,0))) +
  scale_color_jama() +
  scale_linetype_manual(NULL, values = 1:2) +
  labs(
    title = "Camrelizumab trial",
    x = "Time (months)",
    y = "Survival probability",
    color = NULL
  )  +
  theme_classic() +
  theme(
    panel.grid.major.y = element_line(),
    legend.position = c(1, 1),
    legend.justification = c(1, 1),
    legend.key.width = unit(1, "cm")
  )
```

### Input the risk tables




## References
